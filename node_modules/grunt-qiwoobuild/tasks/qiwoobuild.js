/*
 * grunt-qiwoobuild
 * https://github.com/75team/novaUI
 *
 * Copyright (c) 2013 melonHuang
 * Licensed under the MIT license.
 */

'use strict';

module.exports = function(grunt) {

  // Please see the Grunt documentation for more information regarding task
  // creation: http://gruntjs.com/creating-tasks

  grunt.registerMultiTask('qiwoobuild', 'The best Grunt plugin ever.', function() {
    // Merge task-specific and/or target-specific options with these defaults.


    var options = this.options();
    var moduleName = this.target;
    var moduleNameUc = firstLetterUc(moduleName);
    var folderName = this.data.module;
    var version = this.data.version;

    var buildPath = options.buildpath + options.root + folderName + '/' + version + '/';


    var cmdstr = '';
    // Copy module.css
    cmdstr += getCpCmd('src/' + this.target + '.css', buildPath + this.target + '.css');
    console.log(cmdstr);

    // Copy tests/*-spec.js to test/
    cmdstr += getMkdirCmd(buildPath + 'tests/');
    cmdstr += getCpCmd('tests/*-spec.js', buildPath + 'tests/');

    // Copy tests/not -spec.js to examples/
    cmdstr += getMkdirCmd(buildPath + 'examples/');
    cmdstr += getCpCmd('tests/*', buildPath + 'tests/');
    //console.log(cmdstr);
    cmdstr += getRmCmd(buildPath + 'tests/*-spec.js');


    // Copy README.md to readme.md
    cmdstr += getCpCmd('README.md', buildPath + 'readme.md');

    // Copy *.md to docs except README.md
    cmdstr += getMkdirCmd(buildPath + 'docs/');
    cmdstr += getCpCmd('*.md', buildPath + 'docs/');
    cmdstr += getRmCmd(buildPath + 'docs/README.md');

    // mkdir package.json
    cmdstr += touchCmd(buildPath + 'package.json');

    // clear dir build/qiwoo/modules/Nova.target/*
    //cmdstr += getRmCmd(options.buildpath + options.root + folderName + '/*' );
    
    var exec = require('child_process').exec;
    var child = exec(cmdstr, function(error, stdout, strerr) {
    });

    

    grunt.loadNpmTasks('grunt-module-transfer');
    grunt.task.run('module_transfer:' + this.target);

  });

        // 首字母大写
        function firstLetterUc(str) {
            return str.charAt(0).toUpperCase() + str.substring(1);
        }

        function getCpCmd(sourceFile, destFile) {
            return 'cp -R ' + sourceFile + ' ' + destFile + ';';
        }

        function getMkdirCmd(path) {
            return 'mkdir ' + path + ';';
        }

        function getRmCmd(path) {
            return 'rm -Rf ' + path + ';';
        }

        function touchCmd(filename) {
            return 'touch ' + filename + ';';
        }

};
